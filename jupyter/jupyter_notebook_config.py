# Copyright 2015 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""" 
   Module to set Jupyter access password 
   from the jupyterPASSWORD environment, if available
   BASED ON: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/jupyter_notebook_config.py
"""
import os
import subprocess
from six import u as unicode
from IPython.lib import passwd

c = c # pylint:disable=undefined-variable
c.NotebookApp.ip = '0.0.0.0'
c.NotebookApp.port = int(os.getenv('jupyterPORT', 8888))
c.NotebookApp.open_browser = False
c.NotebookApp.default_url = '/lab' # direct to jupyterlab by default

if 'jupyterCONFIG_URL' in os.environ:
    remote_dir = os.environ['jupyterCONFIG_URL']
    print("Remote: %s" % remote_dir)
    dest_dir = '/srv/.jupyter/'
    
    command = (['rclone', 'copy', '--progress', remote_dir, dest_dir])
    result = subprocess.Popen(command, stderr=subprocess.PIPE)
    output, error = result.communicate()
    
    key_path = os.path.join(dest_dir, 'jupyterSSL.key')
    pem_path = os.path.join(dest_dir, 'jupyterSSL.pem')   
    if not error and os.path.exists(key_path) and os.path.exists(pem_path) :
        c.NotebookApp.certfile = unicode(pem_path)
        c.NotebookApp.keyfile = unicode(key_path)
    else:
        print("Error from rclone? %s" % (error))

# sets a password if jupyterPASSWORD is set in the environment (>8 characters)
# if no password is set, one has to provide token generated by jupyter
if 'jupyterPASSWORD' in os.environ:
    password = os.environ['jupyterPASSWORD']
    if password and len(password) > 8:
        c.NotebookApp.password = passwd(password)
    del os.environ['jupyterPASSWORD']
